{"bdd_block_dict": {"rudder": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"manipulated\"]}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"frame rudder\", \"rudder bottom\", \"rudder plane\"]}, \"composite_parents\": {\"py/set\": [\"become glider amateur\", \"operator\", \"wire cable\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"rudder\", \"value\": \"front and rear\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"type\", \"value\": \"propelled flying machine\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"type\", \"value\": \"propelled flying machine\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"rudder_control\", \"value\": \"wire cables\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"rudder\", \"value\": \"both front and rear\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"control\", \"value\": \"wire cables\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"rudder\", \"value\": \"front and rear\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"type\", \"value\": \"motor - propelled flying machine\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder\", \"category\": \"rudder\", \"value\": \"front and rear\", \"unit\": null}]}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {\"manipulated\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\"]}, \"other_sentences\": {\"py/set\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\", \"Allowing that the amateur has become reasonably expert in the manipulation \\n       of the glider amateur should , before constructing an actual flying machine , \\n       equip amateur glider with a rudder .\"]}}", "wire cable": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"wire cable\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"wire\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": [\"rudder\"]}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\"]}}", "operator": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"operator\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"abstraction\", \"entity\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": [\"rudder\"]}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\"]}}", "motor machine": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"motor machine\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"has\"]}, \"general_parents\": {\"py/set\": [\"machine\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"motor machine\", \"category\": \"control\", \"value\": \"wire cables\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"motor machine\", \"category\": \"type\", \"value\": \"motor - propelled flying machine\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"motor machine\", \"category\": \"rudder_control\", \"value\": \"wire cables\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"motor machine\", \"category\": \"rudder\", \"value\": \"front and rear\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"motor machine\", \"category\": \"rudder\", \"value\": \"front and rear\", \"unit\": null}]}, \"parts\": {\"py/set\": [\"rudder wire cable\"]}, \"operation_sentences\": {\"has\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\"]}, \"other_sentences\": {\"py/set\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\"]}}", "rudder wire cable": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder wire cable\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"motor machine\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The real motor - propelled flying machine , \\n       generally has both front and rear rudder manipulated by wire cables at \\n       the will of the operator .\"]}}", "become glider amateur": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"become glider amateur\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"should equip\"]}, \"general_parents\": {\"py/set\": [\"glider\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": [\"rudder\"]}, \"operation_sentences\": {\"should equip\": [\"Allowing that the amateur has become reasonably expert in the manipulation \\n       of the glider amateur should , before constructing an actual flying machine , \\n       equip amateur glider with a rudder .\"]}, \"other_sentences\": {\"py/set\": [\"Allowing that the amateur has become reasonably expert in the manipulation \\n       of the glider amateur should , before constructing an actual flying machine , \\n       equip amateur glider with a rudder .\"]}}", "glider": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"glider\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"entity\", \"object\", \"physical_entity\", \"instrumentality\"]}, \"special_children\": {\"py/set\": [\"become glider amateur\", \"rudder glider\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"Allowing that the amateur has become reasonably expert in the manipulation \\n       of the glider amateur should , before constructing an actual flying machine , \\n       equip amateur glider with a rudder .\"]}}", "rudder beam": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder beam\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"is\", \"form\"]}, \"general_parents\": {\"py/set\": [\"beam\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"frame rudder\", \"bottom frame rudder\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"length\", \"value\": \"8/11\", \"unit\": \"ft/in\"}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"bottom_frame\", \"value\": \"beams\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"frames\", \"value\": \"frames\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"top_frame\", \"value\": \"beams\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"top_frame\", \"value\": \"beams\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"bottom_frame\", \"value\": \"beams\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"vertical\", \"value\": \"rudder\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"length\", \"value\": \"8/11\", \"unit\": \"ft/in\"}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"rudder beam\", \"category\": \"type\", \"value\": \"vertical\", \"unit\": null}]}, \"parts\": {\"py/set\": [\"foot inch\"]}, \"operation_sentences\": {\"is\": [\"This rudder beam is 8 feet \\n       11 inches long .\"], \"form\": [\"The rudder beams form the top and bottom frames of the vertical rudder .\"]}, \"other_sentences\": {\"py/set\": [\"Now , from the outer ends of the rudder frame run four similar \\n       diagonal wires to the end of the rudder beam where beam rests on the cross \\n       piece .\", \"The rudder beams form the top and bottom frames of the vertical rudder .\", \"This rudder beam is 8 feet \\n       11 inches long .\"]}}", "foot inch": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"foot inch\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"rudder beam\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"This rudder beam is 8 feet \\n       11 inches long .\"]}}", "step": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"step\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"is\"]}, \"general_parents\": {\"py/set\": [\"entity\", \"abstraction\", \"psychological_feature\", \"event\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"step\", \"category\": \"next_step\", \"value\": \"construct the rudder\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"step\", \"category\": \"type\", \"value\": \"rudder\", \"unit\": null}]}, \"parts\": {\"py/set\": [\"construct rudder step\"]}, \"operation_sentences\": {\"is\": [\"The next step is to construct the rudder step .\"]}, \"other_sentences\": {\"py/set\": [\"The next step is to construct the rudder step .\"]}}", "construct rudder step": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"construct rudder step\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"step\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The next step is to construct the rudder step .\"]}}", "bottom frame rudder": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"bottom frame rudder\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"frame rudder\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": [\"rudder beam\"]}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The rudder beams form the top and bottom frames of the vertical rudder .\"]}}", "frame rudder": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"frame rudder\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"rudder\"]}, \"special_children\": {\"py/set\": [\"bottom frame rudder\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": [\"rudder beam\"]}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The rudder beams form the top and bottom frames of the vertical rudder .\"]}}", "piece horizontal": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"piece horizontal\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"placing\"]}, \"general_parents\": {\"py/set\": [\"piece\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": [\"strip\", \"bolt\"]}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {\"placing\": [\"Find the exact center of the upright pieces on the \\n       vertical rudder , and at this spot faster with bolts the long pieces of the \\n       horizontal , placing bolts on the outside of the vertical strips .\"]}, \"other_sentences\": {\"py/set\": [\"Find the exact center of the upright pieces on the \\n       vertical rudder , and at this spot faster with bolts the long pieces of the \\n       horizontal , placing bolts on the outside of the vertical strips .\"]}}", "bolt": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"bolt\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"abstraction\", \"psychological_feature\", \"physical_entity\", \"event\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": [\"piece horizontal\"]}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"Find the exact center of the upright pieces on the \\n       vertical rudder , and at this spot faster with bolts the long pieces of the \\n       horizontal , placing bolts on the outside of the vertical strips .\"]}}", "strip": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"strip\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"piece\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": [\"piece horizontal\"]}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"Find the exact center of the upright pieces on the \\n       vertical rudder , and at this spot faster with bolts the long pieces of the \\n       horizontal , placing bolts on the outside of the vertical strips .\"]}}", "framework": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"framework\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"is\"]}, \"general_parents\": {\"py/set\": [\"psychological_feature\", \"abstraction\", \"entity\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"framework\", \"category\": \"material\", \"value\": \"cloth\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"framework\", \"category\": \"method\", \"value\": \"same manner as the planes\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"framework\", \"category\": \"method\", \"value\": \"same manner as the planes\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"framework\", \"category\": \"material\", \"value\": \"cloth\", \"unit\": null}]}, \"parts\": {\"py/set\": [\"manner plane\"]}, \"operation_sentences\": {\"is\": [\"The framework is to be covered with cloth in the same manner as the \\n       planes .\"]}, \"other_sentences\": {\"py/set\": [\"The framework is to be covered with cloth in the same manner as the \\n       planes .\"]}}", "manner plane": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"manner plane\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"framework\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"The framework is to be covered with cloth in the same manner as the \\n       planes .\"]}}", "beam": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"beam\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"joins\", \"rests\"]}, \"general_parents\": {\"py/set\": [\"piece\"]}, \"special_children\": {\"py/set\": [\"rudder beam\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": [\"cross piece\", \"rudder plane\"]}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {\"joins\": [\"Begin by running two of these \\n       wires from the top eye - bolts of sanctions 3 and 4 , page 37 , to rudder \\n       beam where beam joins the rudder planes , listening planes at the bottom .\"], \"rests\": [\"Now , from the outer ends of the rudder frame run four similar \\n       diagonal wires to the end of the rudder beam where beam rests on the cross \\n       piece .\"]}, \"other_sentences\": {\"py/set\": [\"Now , from the outer ends of the rudder frame run four similar \\n       diagonal wires to the end of the rudder beam where beam rests on the cross \\n       piece .\", \"Begin by running two of these \\n       wires from the top eye - bolts of sanctions 3 and 4 , page 37 , to rudder \\n       beam where beam joins the rudder planes , listening planes at the bottom .\"]}}", "rudder plane": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder plane\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"rudder\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": [\"beam\"]}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"Begin by running two of these \\n       wires from the top eye - bolts of sanctions 3 and 4 , page 37 , to rudder \\n       beam where beam joins the rudder planes , listening planes at the bottom .\"]}}", "wire": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"wire\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"to be connected\", \"are\", \"reaching\"]}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"truss wire\", \"wire cable\"]}, \"composite_parents\": {\"py/set\": [\"end turn buckle\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": [\"rudder beam glider\", \"rudder beam bottom\"]}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"connection\", \"value\": \"turn-buckle\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"regulation\", \"value\": \"tension\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"regulation\", \"value\": \"tension\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"end\", \"value\": \"one\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"end\", \"value\": \"one\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"type\", \"value\": \"wires\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"connection\", \"value\": \"turn-buckle\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"wire\", \"category\": \"location\", \"value\": \"rudder beam, top and bottom planes of the glider\", \"unit\": null}]}, \"parts\": {\"py/set\": [\"end buckle tension\"]}, \"operation_sentences\": {\"reaching\": [\"This will give you four diagonal \\n       wires reaching from the rudder beam to the top and bottom planes of the \\n       glider .\"], \"to be connected\": [\"All the \\n       wires are to be connected at one end with turn - buckle so the tension may \\n       be regulated as desired .\"], \"are\": [\"All the \\n       wires are to be connected at one end with turn - buckle so the tension may \\n       be regulated as desired .\"]}, \"other_sentences\": {\"py/set\": [\"All the \\n       wires are to be connected at one end with turn - buckle so the tension may \\n       be regulated as desired .\", \"This will give you four diagonal \\n       wires reaching from the rudder beam to the top and bottom planes of the \\n       glider .\"]}}", "rudder beam bottom": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder beam bottom\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"rudder bottom\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": [\"wire\"]}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"This will give you four diagonal \\n       wires reaching from the rudder beam to the top and bottom planes of the \\n       glider .\"]}}", "rudder beam glider": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder beam glider\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"rudder glider\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": [\"wire\"]}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"This will give you four diagonal \\n       wires reaching from the rudder beam to the top and bottom planes of the \\n       glider .\"]}}", "cross piece": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"cross piece\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"piece\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": [\"beam\"]}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"Now , from the outer ends of the rudder frame run four similar \\n       diagonal wires to the end of the rudder beam where beam rests on the cross \\n       piece .\"]}}", "truss wire": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"truss wire\", \"isAugmented\": false, \"operations\": {\"py/set\": [\"strengthening\"]}, \"general_parents\": {\"py/set\": [\"wire\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": [{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"truss wire\", \"category\": \"connection\", \"value\": \"rudder to the main body of the glider\", \"unit\": null}, {\"py/object\": \"dynamo.sysMLAugmenter.types.BDDAttribute\", \"subject\": \"truss wire\", \"category\": \"type\", \"value\": \"truss\", \"unit\": null}]}, \"parts\": {\"py/set\": [\"rudder body glider\"]}, \"operation_sentences\": {\"strengthening\": [\"You will then have eight truss wires strengthening the connection \\n       of the rudder to the main body of the glider .\"]}, \"other_sentences\": {\"py/set\": [\"You will then have eight truss wires strengthening the connection \\n       of the rudder to the main body of the glider .\"]}}", "rudder body glider": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder body glider\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"truss wire\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"You will then have eight truss wires strengthening the connection \\n       of the rudder to the main body of the glider .\"]}}", "end turn buckle": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"end turn buckle\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"end buckle\"]}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": [\"wire\"]}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"All the \\n       wires are to be connected at one end with turn - buckle so the tension may \\n       be regulated as desired .\"]}}", "end buckle tension": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"end buckle tension\", \"isAugmented\": false, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": []}, \"composite_parents\": {\"py/set\": [\"wire\"]}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": [\"All the \\n       wires are to be connected at one end with turn - buckle so the tension may \\n       be regulated as desired .\"]}}", "machine": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"machine\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"entity\", \"object\", \"physical_entity\", \"instrumentality\"]}, \"special_children\": {\"py/set\": [\"motor machine\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "piece": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"piece\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"physical_entity\", \"entity\", \"object\"]}, \"special_children\": {\"py/set\": [\"piece horizontal\", \"beam\", \"strip\", \"cross piece\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "rudder bottom": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder bottom\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"rudder\"]}, \"special_children\": {\"py/set\": [\"rudder beam bottom\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "rudder glider": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"rudder glider\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"glider\"]}, \"special_children\": {\"py/set\": [\"rudder beam glider\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "end buckle": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"end buckle\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"end\"]}, \"special_children\": {\"py/set\": [\"end turn buckle\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "end": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"end\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": [\"physical_entity\", \"entity\", \"object\"]}, \"special_children\": {\"py/set\": [\"end buckle\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "entity": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"entity\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"piece\", \"end\", \"step\", \"framework\", \"machine\", \"operator\", \"glider\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "abstraction": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"abstraction\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"bolt\", \"operator\", \"step\", \"framework\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "physical_entity": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"physical_entity\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"piece\", \"bolt\", \"end\", \"glider\", \"machine\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "instrumentality": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"instrumentality\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"glider\", \"machine\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "object": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"object\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"piece\", \"end\", \"glider\", \"machine\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "event": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"event\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"step\", \"bolt\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}", "psychological_feature": "{\"py/object\": \"dynamo.sysMLAugmenter.types.BDDBlock\", \"block_name\": \"psychological_feature\", \"isAugmented\": true, \"operations\": {\"py/set\": []}, \"general_parents\": {\"py/set\": []}, \"special_children\": {\"py/set\": [\"step\", \"bolt\", \"framework\"]}, \"composite_parents\": {\"py/set\": []}, \"reference_parents\": {\"py/set\": []}, \"reference_children\": {\"py/set\": []}, \"attributes\": {\"py/set\": []}, \"parts\": {\"py/set\": []}, \"operation_sentences\": {}, \"other_sentences\": {\"py/set\": []}}"}}